DROP TABLE IF EXISTS Company;
DROP TABLE IF EXISTS Document;
DROP TABLE IF EXISTS Language;
DROP TABLE IF EXISTS File;
DROP TABLE IF EXISTS DocAttribute;
DROP TABLE IF EXISTS Type;
DROP TABLE IF EXISTS Worker;
DROP TABLE IF EXISTS CompanyRole;
DROP TABLE IF EXISTS Revision;
DROP TABLE IF EXISTS RevisionAttribute;
DROP TABLE IF EXISTS Stated;
DROP TABLE IF EXISTS DocPossesses;
DROP TABLE IF EXISTS RevPossesses;
DROP TABLE IF EXISTS Belongs;
DROP TABLE IF EXISTS Modified;
DROP TABLE IF EXISTS Request;
DROP TABLE IF EXISTS ProjectRole;
DROP TABLE IF EXISTS DocumentRoleWorker; --NOVO! TERN√ÅRIA PROJ ROLE
DROP TABLE IF EXISTS CheckOut;
DROP TABLE IF EXISTS CheckIn;
DROP TABLE IF EXISTS Status; --NOVO! ADICIONAR NOS PONTOS ANTERIORES

CREATE TABLE Company (
	CID		INTEGER,
	Cname 		TEXT,
	NIF		INTEGER,
	address		TEXT,
	CONSTRAINT company_pk PRIMARY KEY (CID)
);
CREATE TABLE Document (
	docID		INTEGER PRIMARY KEY,
	dNAME		TEXT NOT NULL,
	date_ini	DATE,
	date_fin	DATE,
	type		TEXT,
	ownerID		INTEGER,
	CONSTRAINT document_type_fk FOREIGN KEY (type) REFERENCES Type(TID),
	CONSTRAINT document_owner_fk FOREIGN KEY (ownerID) REFERENCES Worker(WID),
	CONSTRAINT checkDiDf CHECK(date_ini<date_fin OR date_fin=NULL)
);
CREATE TABLE Language (
	LID			INTEGER,
	Lname		TEXT,
	CONSTRAINT language_pk PRIMARY KEY (LID)
);
CREATE TABLE File (
	FID			INTEGER,
	docID		INTEGER,
	Fname		TEXT,
	size		INTEGER,
	extension	TEXT,
	CONSTRAINT file_pk PRIMARY KEY (FID), 
	CONSTRAINT file_doc_fk FOREIGN KEY (docID) REFERENCES Document(docID),
	CONSTRAINT checkFSize CHECK(size >=0)
);
CREATE TABLE DocAttribute (
	DAID	INTEGER,
	DAname	VARCHAR2(50),
	DAvalue	TEXT,
	CONSTRAINT docAttribute_pk PRIMARY KEY (DAID) 
);
CREATE TABLE Type (
	TID			INTEGER,
	Tname		TEXT,
	last_mod_date	DATE,
	status		TEXT,
	remarks		TEXT,
	CONSTRAINT type_pk PRIMARY KEY (TID)
);
CREATE TABLE Worker (
	WID		INTEGER PRIMARY KEY,
	Wname		TEXT NOT NULL
);
CREATE TABLE CompanyRole (
	CRID	INTEGER,
	CRname	VARCHAR2(50),
	CONSTRAINT companyRole_pk PRIMARY KEY (CRID)
);
CREATE TABLE Revision (
	docID		INTEGER,
	revID		INTEGER PRIMARY KEY AUTOINCREMENT,
	authorID	INTEGER,
	version		TEXT,
	date		DATE,
	CONSTRAINT revision_author_fk FOREIGN KEY (authorID) REFERENCES Worker(WID),
	CONSTRAINT revision_doc_fk FOREIGN KEY (docID) REFERENCES Document(docID)
);
CREATE TABLE RevisionAttribute (
	RAID		INTEGER,
	RAname		TEXT,
	RAvalue		TEXT,
	CONSTRAINT revisionAttribute_pk PRIMARY KEY (RAID)
);
CREATE TABLE Stated (
	LID			INTEGER,
	docID		INTEGER,
	CONSTRAINT stated_fk1 FOREIGN KEY (LID) REFERENCES Language(LID),
	CONSTRAINT stated_fk2 FOREIGN KEY (docID) REFERENCES Document(docID),
	CONSTRAINT stated_pk PRIMARY KEY(LID,docID)
);
CREATE TABLE DocPossesses (
	DAID		INTEGER,
	docID		INTEGER,
	CONSTRAINT docPossesses_fk1 FOREIGN KEY (DAID) REFERENCES DocAttribute(DAID),
	CONSTRAINT docPossesses_fk2 FOREIGN KEY (docID) REFERENCES Document(docID),
	CONSTRAINT docPossesses_pk PRIMARY KEY(DAID,docID)
);
CREATE TABLE RevPossesses (
	RAID 		INTEGER,
	revID		INTEGER,
	CONSTRAINT revPossesses_fk1 FOREIGN KEY (RAID) REFERENCES RevisionAttribute(RAID),
	CONSTRAINT revPossesses_fk2 FOREIGN KEY (revID) REFERENCES Revision(revID),
	CONSTRAINT revPossesses_pk PRIMARY KEY(revID,RAID)
);
CREATE TABLE Belongs (
	WID		INTEGER,
	CRID		INTEGER,
	CONSTRAINT belongs_fk1 FOREIGN KEY (WID) REFERENCES Worker(WID),
	CONSTRAINT belongs_fk2 FOREIGN KEY (CRID) REFERENCES CompanyRole(CRID),
	CONSTRAINT belongs_pk PRIMARY KEY(WID,CRID)
);
CREATE TABLE Modified (
	TID		INTEGER,
	WID		INTEGER,
	CONSTRAINT modified_fk1 FOREIGN KEY (TID) REFERENCES Type(TID),
	CONSTRAINT modified_fk2 FOREIGN KEY (WID) REFERENCES Worker(WID),
	CONSTRAINT modified_pk PRIMARY KEY(TID,WID)
);
CREATE TABLE Request (
	docID		INTEGER,
	CID			INTEGER,
	SID			INTEGER,
	propose_date	DATE NOT NULL,
	CONSTRAINT request_fk1 FOREIGN KEY (docID) REFERENCES Document(docID),
	CONSTRAINT request_fk2 FOREIGN KEY (CID) REFERENCES Company(CID),
	CONSTRAINT request_fk3 FOREIGN KEY (SID) REFERENCES Status(SID),
	CONSTRAINT request_pk PRIMARY KEY(docID)
);
CREATE TABLE ProjectRole (
	PRID	INTEGER,
	PRname		TEXT,
	CONSTRAINT projectRole_pk PRIMARY KEY(PRID)
);
CREATE TABLE DocumentRoleWorker (
	docID	INTEGER,
	WID		INTEGER,
	PRID	INTEGER,
	CONSTRAINT drw_document_fk FOREIGN KEY (docID) REFERENCES Document(docID),
	CONSTRAINT drw_role_fk FOREIGN KEY (WID) REFERENCES Worker(WID),
	CONSTRAINT drw_worker_fk FOREIGN KEY (PRID) REFERENCES ProjectRole(PRID)
);
CREATE TABLE CheckOut (
	revID		INTEGER,
	WID		INTEGER,
	-- COID		INTEGER,
	COdate		DATE NOT NULL,
	CONSTRAINT checkOut_fk1 FOREIGN KEY (revID) REFERENCES Revision(revID),
	CONSTRAINT checkOut_fk2 FOREIGN KEY (WID) REFERENCES Worker(WID),
	CONSTRAINT checkOut_pk PRIMARY KEY(revID)
);
-- CREATE TABLE CheckIn (
-- 	revID		INTEGER,
-- 	WID		INTEGER,
-- 	CIID		INTEGER,
-- 	CIdate		DATE NOT NULL,
-- 	remarks		TEXT,
-- 	CONSTRAINT checkIn_fk1 FOREIGN KEY (revID) REFERENCES Revision(revID),
-- 	CONSTRAINT checkIn_fk2 FOREIGN KEY (WID) REFERENCES Worker(WID),
-- 	CONSTRAINT checkIn_pk PRIMARY KEY(revID,WID)
-- );
CREATE TABLE Status (
	SID		INTEGER,
	sDescription	TEXT,
	CONSTRAINT status_pl PRIMARY KEY (SID)
);
